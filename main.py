#!/usr/bin/env
# By ch3rrydrunk <@ch3rrydrunk>
# Built with grace on python-telegram-bot
import logging as log
import os

from telegram import *
from telegram.ext import *
from telegram.ext import CommandHandler as CMH 
from telegram.ext import MessageHandler as MSH

from imageai.Detection import ObjectDetection
import os
import os.path

"""for eachObject in detections:
    print(eachObject["name"] , " : " , eachObject["percentage_probability"] )
    """

####### SETTINGS #######
#~~~~~~~ Logging ~~~~~~#
log.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=log.INFO)
logger = log.getLogger(__name__)

#~~~~~~~ ImageAI ~~~~~~#
execution_path = os.getcwd()
"""
execution_path = "/Users/davidamb/telegram_bots/hackaton_vlabs"
detector = ObjectDetection()
detector.setModelTypeAsRetinaNet()
detector.setModelPath(os.path.join(execution_path , "resnet50_coco_best_v2.0.1.h5"))
detector.loadModel()
"""

#~~~~~~~ Proxyfy ~~~~~~#
'''
# Be sure to add "request_kwargs=REQUEST_KWARGS" as Updater parameter if you wanna use proxy
REQUEST_KWARGS={
    'proxy_url': 'http://PROXY_HOST:PROXY_PORT/',
    # Optional, if you need authentication:
    'username': 'PROXY_USER',
    'password': 'PROXY_PASS',
}'''

######### LOGICS ########
#~~~~~~~ Commands ~~~~~~#
def start(update, context):
	update.message.reply_text("–ù–∞—á–Ω–µ–º?\n"
								"–ü—Ä–æ—Å—Ç–æ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π –≥—Ä—É–ø–ø—É,"
								"—á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫!\n"
								"–ò–ª–∏ –≤—ã–±–µ—Ä–∏ —Ç–∏–ø –ø—Ä–µ–¥–º–µ—Ç–æ–≤, —á—Ç–æ–±—ã –ø–æ—Å—á–∏—Ç–∞—Ç—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ!",
								reply_markup=markup)
	return MAIN


def help(update, context):
	update.message.reply_text("–°–µ—Ä—å–µ–∑–Ω–æ? :)\n"
								"–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—Å—ã–ª–∞–π —Ñ–æ—Ç–æ "
								"–∏–ª–∏ –Ω–∞–±–µ—Ä–∏ '/start' –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏!",
								reply_markup=markup)
	return MAIN


#~~~~~~~~ Functions ~~~~~~~#
def rewind(update, context):
	return MAIN


def count_x(update, context):
	image_id = update.message.photo[-1]
	image = bot_core.bot.get_file(image_id)
	image.download('img.jpg')
	while True:
		if os.path.isfile("img.jpg") == True:
			break
	detector = ObjectDetection()
	detector.setModelTypeAsRetinaNet()
	detector.setModelPath(os.path.join(execution_path, "resnet50_coco_best_v2.0.1.h5"))
	detector.loadModel()
	detections = detector.detectObjectsFromImage(input_image=os.path.join(execution_path, "img.jpg"), output_image_path=os.path.join(execution_path , "imgnew.jpg"))
	file = open('imgnew.jpg', 'rb')
	i = 0
	for each in detections:
		if (each["name"] == "person"):
			i += 1
	update.message.reply_text("–ù–∞ —Ñ–æ—Ç–æ - {} –æ–±—ä–µ–∫—Ç–æ–≤\n".format(i),
								reply_markup=markup)
	update.message.reply_photo(file)
#	close(file)
	return MAIN


def to_contact(update, context):
	update.message.reply_text("–°–¥–µ–ª–∞–Ω–æ —Å –ª—é–±–æ–≤—å—é –∫–æ–º–∞–Ω–¥–æ–π RAW OCV\n"
								"–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ:\n"
								"https://github.com/ch3rrydrunk/countX.git\n"
								"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏!",
								reply_markup=markup)
	return MAIN


def cancel(update, context):
	logger.info(str(update))
	user = update.message.from_user
	logger.info("User %s canceled the conversation.", user.first_name)
	update.message.reply_text('–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!',
								reply_markup=ReplyKeyboardRemove())

	return ConversationHandler.END



def error(update, context):
	"""Log Errors caused by Updates."""
	logger.warning('Update "%s" caused error "%s"', update, context.error)


####### IGNITION #######
# To set API token set env variable (do "export BOT_API_TOKEN=your_token")
TOKEN = os.getenv("BOT_API_TOKEN")
bot_core = Updater("766731952:AAH6Xarc4gOOfWKI0kVYB8bVZs46_PdGVvE", use_context=True)
bot = bot_core.dispatcher

#======= LOGICS =======#

#ÀúÀúÀúÀúÀúÀú  KEYMAP  ÀúÀúÀúÀúÀúÀú#
reply_keyboard = [['üì≤ –°–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏! üì≤']]
markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)

#ÀúÀúÀúÀúÀúÀú  MANAGER ÀúÀúÀúÀúÀúÀú#
MAIN = range(1)

conv_handler = ConversationHandler(
	entry_points=[CMH('start', start)],

	states={
		MAIN:	[MSH(Filters.regex('^üì≤ –°–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏! üì≤$'), to_contact),
					MSH(Filters.photo, count_x)]
	},
	fallbacks=[CMH('cancel', cancel)]
	)
bot.add_handler(conv_handler)
#Extra Commands

#Errors
bot.add_error_handler(error)

#ÀúÀúÀúÀúÀúÀú Gogogo ÀúÀúÀúÀúÀúÀú#
bot_core.start_polling()
bot_core.idle()
